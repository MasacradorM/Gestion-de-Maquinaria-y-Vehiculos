---
// HistorialRegistros.astro
export interface Props {
  equipmentData?: {
    tipo: string;
    placa: string;
    estado: string;
    obra: string;
    actividad: string;
    operador: string;
  };
}

const { equipmentData } = Astro.props;

---

<style>
    // historial-modal.scss

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;

  &--open {
    opacity: 1;
    visibility: visible;
  }

  &__backdrop {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    cursor: pointer;
  }

  &__content {
    position: relative;
    width: 95%;
    max-width: 1200px;
    height: 90%;
    max-height: 800px;
    background: #ffffff;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    display: flex;
    flex-direction: column;
    transform: scale(0.9);
    transition: transform 0.3s ease;

    .modal--open & {
      transform: scale(1);
    }
  }

  &__header {
    display: flex;
    background: #2c5aa0;
    color: white;
    min-height: 60px;
    position: relative;
  }

  &__header-left {
    flex: 0 0 250px;
    background: #1e3d6f;
  }

  &__header-right {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 20px;
  }

  &__sidebar {
    padding: 20px;
    height: 100%;

    &-title {
      color: white;
      margin: 0 0 30px 0;
      font-size: 24px;
      font-weight: 600;
    }
  }

  &__categories {
    h4 {
      color: white;
      margin: 0 0 15px 0;
      font-size: 16px;
      font-weight: 500;
    }
  }

  &__title-section {
    flex: 1;
    
    h2 {
      margin: 0 0 15px 0;
      font-size: 20px;
      font-weight: 600;
      color: #e8e8e8;
    }
  }

  &__filters {
    display: flex;
    gap: 15px;
    align-items: center;
  }

  &__close {
    background: none;
    border: none;
    color: white;
    font-size: 24px;
    cursor: pointer;
    padding: 5px;
    border-radius: 4px;
    transition: background-color 0.2s ease;

    &:hover {
      background: rgba(255, 255, 255, 0.1);
    }

    span {
      display: block;
      line-height: 1;
    }
  }

  &__body {
    flex: 1;
    display: flex;
    background: #f5f5f5;
    overflow: hidden;
  }
}

.category-item {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 12px 15px;
  margin-bottom: 8px;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.2s ease;
  color: #ccc;

  &:hover {
    background: rgba(255, 255, 255, 0.1);
  }

  &--active {
    background: #4a9eff;
    color: white;
  }

  &-icon {
    font-size: 16px;
  }
}

.filter-select {
  background: white;
  border: 1px solid #ddd;
  border-radius: 6px;
  padding: 8px 12px;
  font-size: 14px;
  color: #333;
  cursor: pointer;

  &:focus {
    outline: none;
    border-color: #4a9eff;
  }
}

.date-filter {
  background: white;
  border: 1px solid #ddd;
  border-radius: 6px;
  padding: 8px 12px;
  font-size: 14px;
  color: #333;
  display: flex;
  align-items: center;
  gap: 8px;

  .calendar-icon {
    color: #666;
  }
}

.table-container {
  flex: 1;
  overflow: auto;
  padding: 20px;
  background: white;
  margin: 0 20px 20px 20px;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.records-table {
  width: 100%;
  border-collapse: collapse;
  font-size: 14px;

  th {
    background: #2c5aa0;
    color: white;
    padding: 12px 15px;
    text-align: left;
    font-weight: 600;
    font-size: 12px;
    text-transform: uppercase;
    letter-spacing: 0.5px;

    &:first-child {
      border-radius: 8px 0 0 0;
    }

    &:last-child {
      border-radius: 0 8px 0 0;
    }
  }

  td {
    padding: 15px;
    border-bottom: 1px solid #eee;
    vertical-align: middle;
    color: #333;

    &:first-child {
      font-weight: 500;
    }
  }

  tr {
    &:hover {
      background: #f8f9fa;
    }

    &:last-child td {
      border-bottom: none;
    }
  }
}

.equipo-info {
  display: flex;
  flex-direction: column;
  gap: 2px;

  .equipo-code {
    font-weight: 600;
    font-size: 13px;
    color: #333;
  }

  .equipo-number {
    font-size: 12px;
    color: #666;
  }
}

.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
  padding: 20px;
  background: white;
  margin: 0 20px 20px 20px;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);

  &__btn {
    min-width: 35px;
    height: 35px;
    border: 1px solid #ddd;
    background: white;
    color: #666;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;

    &:hover {
      border-color: #4a9eff;
      color: #4a9eff;
    }

    &--active {
      background: #4a9eff;
      color: white;
      border-color: #4a9eff;
    }

    &--prev,
    &--next {
      font-size: 18px;
      font-weight: bold;
    }
  }
}

// Responsive design
@media (max-width: 768px) {
  .modal {
    &__content {
      width: 98%;
      height: 95%;
      margin: 10px;
    }

    &__header {
      flex-direction: column;
      min-height: auto;
    }

    &__header-left {
      flex: none;
      order: 2;
    }

    &__header-right {
      flex: none;
      order: 1;
      padding: 15px 20px;
    }

    &__sidebar {
      padding: 15px 20px;
    }

    &__filters {
      flex-wrap: wrap;
      gap: 10px;
    }
  }

  .table-container {
    margin: 0 10px 10px 10px;
    padding: 10px;
  }

  .records-table {
    font-size: 12px;

    th, td {
      padding: 8px 10px;
    }
  }

  .pagination {
    margin: 0 10px 10px 10px;
    padding: 15px;
  }
}

</style>

<div class="historial-container">
  <!-- Header Principal -->
  <div class="main-header">
    <div class="header-brand">
      <h1>GM&V</h1>
    </div>
    <div class="header-actions">
      <button class="notification-btn">üîî</button>
      <button class="settings-btn">‚öôÔ∏è</button>
      <div class="user-info">
        <span>Admin</span>
        <div class="user-avatar">A</div>
      </div>
    </div>
  </div>

  <!-- Contenido Principal -->
  <div class="main-content">
    <!-- Sidebar -->
    <div class="sidebar">
      <div class="sidebar-header">
        <h3>üìä Dashboard</h3>
      </div>
      
      <div class="categories-section">
        <h4>Categor√≠a</h4>
        <div class="category-list">
          <div class="category-item category-item--active">
            <span class="category-icon">üîß</span>
            <span id="equipment-type">Maquinaria Amarilla</span>
          </div>
          <div class="category-item">
            <span class="category-icon">üöó</span>
            <span>Veh√≠culos</span>
          </div>
        </div>
      </div>
      
      <!-- Bot√≥n para volver -->
      <button class="back-btn" onclick="volverAtras()">
        ‚Üê Volver al Dashboard
      </button>
    </div>

    <!-- √Årea Principal -->
    <div class="content-area">
      <!-- Header de Contenido -->
      <div class="content-header">
        <div class="title-section">
          <h2>HISTORIAL DE REGISTROS</h2>
          <div class="equipment-info">
            <span id="current-equipment">Equipo: <strong></strong></span>
          </div>
        </div>
        
        <div class="filters-section">
          <select class="filter-select" id="filtro-actividad">
            <option value="todos">ACTIVIDAD: Todos</option>
            <option value="mantenimiento">En MANTENIMIENTO</option>
            <option value="disponible">DISPONIBLE</option>
            <option value="operacion">En OPERACI√ìN</option>
          </select>
          
          <select class="filter-select" id="filtro-obra">
            <option value="todos">OBRA: Todos</option>
            <option value="incoint">INCOINT</option>
            <option value="proyecto-a">Proyecto A</option>
          </select>
          
          <div class="date-filter">
            <span class="calendar-icon">üìÖ</span>
            <span id="current-date">abril 2025</span>
          </div>
        </div>
      </div>

      <!-- Tabla de Registros -->
      <div class="table-section">
        <div class="table-container">
          <table class="records-table">
            <thead>
              <tr>
                <th>FECHA</th>
                <th>EQUIPO</th>
                <th>OBRA</th>
                <th>ACTIVIDAD</th>
                <th>HR INICIAL</th>
                <th>HR FINAL</th>
                <th>HR TOTAL</th>
              </tr>
            </thead>
            <tbody id="records-tbody">
              <!-- Los datos se cargan din√°micamente -->
            </tbody>
          </table>
        </div>
        
        <!-- Paginaci√≥n -->
        <div class="pagination-section">
          <div class="pagination">
            <button class="pagination-btn" onclick="previousPage()">‚Äπ</button>
            <button class="pagination-btn pagination-btn--active">1</button>
            <button class="pagination-btn">2</button>
            <button class="pagination-btn">3</button>
            <button class="pagination-btn">4</button>
            <button class="pagination-btn">5</button>
            <button class="pagination-btn" onclick="nextPage()">‚Ä∫</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  interface EquipmentData {
    tipo: string;
    placa: string;
    estado: string;
    obra: string;
    actividad: string;
    operador: string;
  }

  class HistorialInterface {
    private currentEquipment: EquipmentData | null = null;
    private currentPage: number = 1;
    private recordsPerPage: number = 10;

    constructor() {
      this.init();
    }

    private init(): void {
      // Cargar datos del equipo desde localStorage o URL params
      this.loadEquipmentData();
      
      // Setup event listeners para filtros
      this.setupFilters();
      
      // Cargar datos iniciales
      this.loadHistorialData();
    }

    private loadEquipmentData(): void {
      // Intentar obtener datos del sessionStorage
      const storedData = sessionStorage.getItem('currentEquipment');
      
      if (storedData) {
        this.currentEquipment = JSON.parse(storedData);
        this.updateInterface();
      } else {
        // Datos de ejemplo si no hay datos almacenados
        this.currentEquipment = {
          tipo: 'AUTOHORMIGONERA',
          placa: 'L3500-2',
          estado: 'DISPONIBLE',
          obra: 'INCOINT',
          actividad: 'En MANTENIMIENTO',
          operador: 'Juan P√©rez'
        };
        this.updateInterface();
      }
    }

    private updateInterface(): void {
      if (!this.currentEquipment) return;

      // Actualizar informaci√≥n del equipo
      const equipmentType = document.getElementById('equipment-type');
      const currentEquipment = document.getElementById('current-equipment');
      
      if (equipmentType) {
        equipmentType.textContent = this.currentEquipment.tipo;
      }
      
      if (currentEquipment) {
        currentEquipment.innerHTML = `Equipo: <strong>${this.currentEquipment.tipo} - ${this.currentEquipment.placa}</strong>`;
      }
    }

    private setupFilters(): void {
      const actividadFilter = document.getElementById('filtro-actividad') as HTMLSelectElement;
      const obraFilter = document.getElementById('filtro-obra') as HTMLSelectElement;

      if (actividadFilter) {
        actividadFilter.addEventListener('change', () => this.loadHistorialData());
      }

      if (obraFilter) {
        obraFilter.addEventListener('change', () => this.loadHistorialData());
      }
    }

    private loadHistorialData(): void {
      if (!this.currentEquipment) return;

      // Datos de ejemplo - aqu√≠ har√≠as la llamada a tu API
      const historialData = [
        {
          fecha: '02/04/2025',
          equipo: {
            codigo: this.currentEquipment.tipo,
            numero: this.currentEquipment.placa
          },
          obra: 'INCOINT',
          actividad: 'En MANTENIMIENTO',
          hrInicial: '2013',
          hrFinal: '2013',
          hrTotal: '0'
        },
        {
          fecha: '03/04/2025',
          equipo: {
            codigo: this.currentEquipment.tipo,
            numero: this.currentEquipment.placa
          },
          obra: 'INCOINT',
          actividad: 'En MANTENIMIENTO',
          hrInicial: '2013',
          hrFinal: '2013',
          hrTotal: '0'
        },
        {
          fecha: '04/04/2025',
          equipo: {
            codigo: this.currentEquipment.tipo,
            numero: this.currentEquipment.placa
          },
          obra: 'INCOINT',
          actividad: 'En MANTENIMIENTO',
          hrInicial: '2013',
          hrFinal: '2013',
          hrTotal: '0'
        },
        {
          fecha: '05/04/2025',
          equipo: {
            codigo: this.currentEquipment.tipo,
            numero: this.currentEquipment.placa
          },
          obra: 'INCOINT',
          actividad: 'DISPONIBLE',
          hrInicial: '2013',
          hrFinal: '2013',
          hrTotal: '0'
        },
        {
          fecha: '06/04/2025',
          equipo: {
            codigo: this.currentEquipment.tipo,
            numero: this.currentEquipment.placa
          },
          obra: 'INCOINT',
          actividad: 'DISPONIBLE',
          hrInicial: '2013',
          hrFinal: '2013',
          hrTotal: '0'
        }
      ];

      this.renderTable(historialData);
    }

    private renderTable(data: any[]): void {
      const tbody = document.getElementById('records-tbody');
      if (!tbody) return;

      tbody.innerHTML = data.map(record => `
        <tr>
          <td>${record.fecha}</td>
          <td>
            <div class="equipo-info">
              <div class="equipo-code">${record.equipo.codigo}</div>
              <div class="equipo-number">${record.equipo.numero}</div>
            </div>
          </td>
          <td>${record.obra}</td>
          <td>
            <span class="activity-badge ${record.actividad.toLowerCase().replace(' ', '-')}">${record.actividad}</span>
          </td>
          <td>${record.hrInicial}</td>
          <td>${record.hrFinal}</td>
          <td>${record.hrTotal}</td>
        </tr>
      `).join('');
    }
  }

  // Funciones globales
  function volverAtras(): void {
    // Volver a la p√°gina anterior o al dashboard
    if (document.referrer) {
      window.history.back();
    } else {
      window.location.href = '/dashboard'; // Ajusta la ruta seg√∫n tu aplicaci√≥n
    }
  }

  function previousPage(): void {
    console.log('P√°gina anterior');
  }

  function nextPage(): void {
    console.log('P√°gina siguiente');
  }

  // Inicializar cuando el DOM est√© listo
  document.addEventListener('DOMContentLoaded', () => {
    new HistorialInterface();
  });

  // Funci√≥n para recibir datos del equipo desde otra p√°gina
  (window as any).setEquipmentData = function(data: EquipmentData) {
    sessionStorage.setItem('currentEquipment', JSON.stringify(data));
    window.location.reload();
  };
</script>