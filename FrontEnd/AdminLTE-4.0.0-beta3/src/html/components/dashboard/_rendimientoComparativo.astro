---
// src/components/RendimientoComparativoChart.astro
interface DatoRendimiento {
  kmRecorridos: number;
  rendimientoKmGal: number;
  galonesUsados: number;
  velocidadMax: number;
}

interface Props {
  datosAyer: DatoRendimiento;
  datosAnteayer: DatoRendimiento;
  fechaAyer: string;
  fechaAnteayer: string;
}

const {
  datosAyer = { kmRecorridos: 90, rendimientoKmGal: 25, galonesUsados: 23, velocidadMax: 22 },
  datosAnteayer = { kmRecorridos: 50, rendimientoKmGal: 0, galonesUsados: 0, velocidadMax: 0 },
  fechaAyer = "08/04/2025",
  fechaAnteayer = "09/04/2025"
} = Astro.props;

const maxValue = Math.max(
  ...Object.values(datosAyer),
  ...Object.values(datosAnteayer)
);

// Calcular valores para el eje Y (0, 30, 60, etc.)
const yAxisValues = Array.from({length: 4}, (_, i) => Math.round((maxValue * 1.2) * (i/3)));
---

<div class="chart-container">
  <div class="chart-header">
    <h3 class="main-title">Comparaci칩n de Rendimiento:</h3>
    <h4 class="sub-title">Ayer VS Anteayer</h4>
  </div>
  
  <div class="chart-wrapper">
    <!-- Eje Y fuera del gr치fico -->
    <div class="y-axis">
      {yAxisValues.map((value, index) => (
        <div class="y-tick" style={`bottom: ${(index/3)*100}%`}>
          <span class="y-value">{value}</span>
          <span class="y-line"></span>
        </div>
      ))}
    </div>
    
    <!-- Gr치fico principal -->
    <div class="chart-content">
      <div class="chart-grid">
        <!-- Barras -->
        <div class="bars-container">
          {['kmRecorridos', 'rendimientoKmGal', 'galonesUsados', 'velocidadMax'].map((metric) => (
            <div class="metric-column">
              <div class="bar-group">
                <div 
                  class="bar ayer" 
                  style={`height: ${(datosAyer[metric]/yAxisValues[3])*100}%`}
                  data-value={datosAyer[metric]}
                ></div>
                <div 
                  class="bar anteayer" 
                  style={`height: ${(datosAnteayer[metric]/yAxisValues[3])*100}%`}
                  data-value={datosAnteayer[metric]}
                ></div>
              </div>
            </div>
          ))}
        </div>
      </div>
      
      <!-- Eje X fuera del gr치fico -->
      <div class="x-axis">
        {['kmRecorridos', 'rendimientoKmGal', 'galonesUsados', 'velocidadMax'].map((metric) => (
          <div class="x-tick">
            <span class="x-label">
              {metric === 'rendimientoKmGal' ? 'Rendimiento' : 
               metric === 'galonesUsados' ? 'Galones' :
               metric === 'velocidadMax' ? 'Velocidad' : 'Km Rec.'}
            </span>
          </div>
        ))}
      </div>
    </div>
  </div>
  
  <div class="legend">
    <div class="legend-item">
      <div class="legend-color ayer"></div>
      <span>Ayer ({fechaAyer})</span>
    </div>
    <div class="legend-item">
      <div class="legend-color anteayer"></div>
      <span>Anteayer ({fechaAnteayer})</span>
    </div>
  </div>
</div>

<style lang="scss">
.chart-container {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  background: white;
  border-radius: 0.5rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  padding: 1.5rem;
  
  .chart-header {
    text-align: center;
    margin-bottom: 1.5rem;
    
    .main-title {
      font-size: 1.5rem;
      font-weight: 600;
      margin: 0;
      color: #333;
    }
    
    .sub-title {
      font-size: 1.25rem;
      font-weight: 500;
      margin: 0.25rem 0 0;
      color: #555;
    }
  }
  
  .chart-wrapper {
    display: flex;
    position: relative;
    min-height: 300px;
  }
  
  .y-axis {
    width: 40px;
    position: relative;
    margin-right: 0.5rem;
    
    .y-tick {
      position: absolute;
      width: 100%;
      display: flex;
      align-items: center;
      
      .y-value {
        font-size: 0.8rem;
        color: #666;
        width: 30px;
        text-align: right;
        padding-right: 0.5rem;
      }
      
      .y-line {
        flex: 1;
        height: 1px;
        background: #eee;
      }
    }
  }
  
  .chart-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  .chart-grid {
    flex: 1;
    position: relative;
    border-left: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    background: 
      linear-gradient(to bottom, transparent 95%, #f5f5f5 95%) 0% 0% / 100% calc(100% / 3);
  }
  
  .bars-container {
    display: flex;
    height: 100%;
    gap: 1rem;
    padding: 0 1rem;
  }
  
  .metric-column {
    flex: 1;
    display: flex;
    flex-direction: column;
    
    .bar-group {
      flex: 1;
      display: flex;
      justify-content: center;
      align-items: flex-end;
      gap: 0.5rem;
      padding: 0 0.5rem;
    }
    
    .bar {
      width: 40%;
      min-height: 2px;
      border-radius: 4px 4px 0 0;
      position: relative;
      transition: height 0.3s ease;
      
      &::after {
        content: attr(data-value);
        position: absolute;
        top: -25px;
        left: 50%;
        transform: translateX(-50%);
        font-size: 0.75rem;
        background: rgba(0,0,0,0.7);
        color: white;
        padding: 2px 5px;
        border-radius: 3px;
        opacity: 0;
        transition: opacity 0.2s;
      }
      
      &:hover::after {
        opacity: 1;
      }
      
      &.ayer {
        background: #1f3b5d;
      }
      
      &.anteayer {
        background: #4BA9E9;
      }
    }
  }
  
  .x-axis {
    display: flex;
    margin-top: 0.5rem;
    padding-left: 1rem;
    
    .x-tick {
      flex: 1;
      text-align: center;
      
      .x-label {
        font-size: 0.8rem;
        color: #666;
        display: inline-block;
        transform: rotate(-30deg);
        transform-origin: left center;
        text-align: left;
        padding-left: 1rem;
        white-space: nowrap;
      }
    }
  }
  
  .legend {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-top: 1.5rem;
    
    .legend-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 0.85rem;
      
      .legend-color {
        width: 15px;
        height: 15px;
        border-radius: 3px;
        
        &.ayer {
          background: #1f3b5d;
        }
        
        &.anteayer {
          background: #4BA9E9;
        }
      }
    }
  }
}
</style>