---
// RendimientoComparativoChart.astro
// Define las interfaces para los tipos de datos
interface DatoRendimiento {
  kmRecorridos: number;
  rendimientoKmGal: number;
  galonesUsados: number;
  velocidadMax: number;
}

// Propiedades que se pueden pasar al componente
interface Props {
  datosAyer: DatoRendimiento;
  datosAnteayer: DatoRendimiento;
  fechaAyer: string;
  fechaAnteayer: string;
}

// Valores por defecto para demostración
const {
  datosAyer = {
    kmRecorridos: 90,
    rendimientoKmGal: 25,
    galonesUsados: 23,
    velocidadMax: 22
  },
  datosAnteayer = {
    kmRecorridos: 50,
    rendimientoKmGal: 0,
    galonesUsados: 0,
    velocidadMax: 0
  },
  fechaAyer = "08/04/2025",
  fechaAnteayer = "09/04/2025"
} = Astro.props;
---

<div class="col-lg-7 rendimiento-chart-container">
  
    <div class="card-header">
    </div>
    <div class="card-body">
      <div class="chart-container">
        <!-- Gráfico con cuadrícula completa -->
        <div class="chart-grid">
          <!-- Eje Y con valores -->
          <div class="y-axis">
            <span>200</span>
            <span>150</span>
            <span>100</span>
            <span>50</span>
            <span>0</span>
          </div>
          
          <!-- Columnas de datos -->
          <div class="chart-columns">
            <!-- Columna KM Recorridos -->
            <div class="chart-column">
              <div class="bars-container">
                <div class="bar ayer" style={`height: ${datosAyer.kmRecorridos / 2}%`}></div>
                <div class="bar anteayer" style={`height: ${datosAnteayer.kmRecorridos / 2}%`}></div>
              </div>

            </div>
            
            <!-- Columna Rendimiento KM/GAL -->
            <div class="chart-column">
              <div class="bars-container">
                <div class="bar ayer" style={`height: ${datosAyer.rendimientoKmGal / 2}%`}></div>
                <div class="bar anteayer" style={`height: ${datosAnteayer.rendimientoKmGal / 2}%`}></div>
              </div>
            </div>
            
            <!-- Columna Galones Usados -->
            <div class="chart-column">
              <div class="bars-container">
                <div class="bar ayer" style={`height: ${datosAyer.galonesUsados / 2}%`}></div>
                <div class="bar anteayer" style={`height: ${datosAnteayer.galonesUsados / 2}%`}></div>
              </div>
            </div>
            
            <!-- Columna Velocidad Máxima -->
            <div class="chart-column">
              <div class="bars-container">
                <div class="bar ayer" style={`height: ${datosAyer.velocidadMax / 2}%`}></div>
                <div class="bar anteayer" style={`height: ${datosAnteayer.velocidadMax / 2}%`}></div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Etiquetas de categorías por fuera del gráfico -->
        <div class="x-axis-labels">
          <div class="axis-label">Km Recorridos</div>
          <div class="axis-label">Rendimiento (km/gal)</div>
          <div class="axis-label">Galones usados</div>
          <div class="axis-label">Velocidad Máx</div>
        </div>
        
        <!-- Leyenda -->
        <div class="chart-legend">
          <div class="legend-item">
            <div class="legend-color ayer"></div>
            <span>Ayer({fechaAyer})</span>
          </div>
          <div class="legend-item">
            <div class="legend-color anteayer"></div>
            <span>Anteayer ({fechaAnteayer})</span>
          </div>
        </div>
      </div>
    </div>
  </div>


<style lang="scss">
.rendimiento-chart-container {
  
  width: 100%;
  .card-header{
  padding: 0.75rem 1.25rem; /* Reducir padding superior */
  border-bottom: none !important;
  }
  
  .card {
    border-radius: 0.5rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    margin-bottom: 1.5rem;
    background-color: #fff;
    
    .card-header {
      padding: 1rem 1.25rem;
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
      
      .card-title {
        margin: 0;
        font-size: 1.25rem;
        font-weight: 600;
        color: #333;
        text-align: center;
      }
    }
    
    .card-body {
    padding: 0.25rem 1.25rem 1.25rem; /* Reducir solo el padding superior */

    }
  }
  
  .chart-container {
    position: relative;
    height: 300px;
    width: 100%;
  }
  
  .chart-grid {
    overflow: hidden;
    margin-top:-4rem;
    display: flex;
    height: 250px;
    position: relative;
    margin-bottom: 0.5rem; /* Reducido para las etiquetas abajo */
    border: 1px solid #ddd;
    background-color: #fff;
    background-image:
      /* Líneas horizontales */
      linear-gradient(
        to bottom,
        #ddd 1px, 
        transparent 1px
      ),
      /* Líneas verticales */
      linear-gradient(
        to right,
        #ddd 1px, 
        transparent 1px
      );
    background-size: 
      100% 50px,  /* Tamaño de celdas horizontales */
      25% 100%;   /* Tamaño de celdas verticales */
  }
  
  /* Etiquetas del eje X (categorías) */
  .x-axis-labels {

  display: flex;
  width: calc(100% - 1rem);
  margin: 0 auto;
  padding: 0 0.5rem;
  justify-content: space-between;
  gap: 0.2rem; // Espacio entre etiquetas

  .axis-label {
  flex: 1;
  min-width: 0; // Permite que el texto se trunque
  text-align: center;
  color: #666;
  font-size: 0.7rem;
  white-space: nowrap;
  transform: rotate(-12deg);
  padding: 0.3rem 0;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;

  // Para pantallas muy pequeñas
  @media (max-width: 576px) {
    font-size: 0.6rem;
    transform: rotate(-25deg); // Más inclinación para ahorrar espacio
    padding: 0.2rem 0;
    
    // Acortar textos largos
    &:nth-child(1) { content: "Km Rec."; }
    &:nth-child(2) { content: "Rend."; }
    &:nth-child(3) { content: "Galones"; }
    &:nth-child(4) { content: "Vel. Máx"; }
  }
}
}
  

  .y-axis {
  position: absolute;
  left: -21px;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  color: #888;
  font-size: 0.8rem;
  
  /* Elimina el transform y ajusta el margen si es necesario */
  span {
    /* transform: translateY(50%);  <-- Elimina esta línea */
    margin-top: 2.09rem; /* Ajusta según necesidad (opcional) */
    
    &:last-child {
      /* transform: translateY(0);  <-- Elimina esta línea */
      margin-bottom: 2rem; /* Ajusta el "0" si queda muy abajo */
    }
  }
}
  
  .chart-columns {
    display: flex;
    width: 100%;
    height: 100%;
    padding-left: 0.5rem;
    padding:0 0.5rem;
    gap: 0.5rem;
  }
  
  .chart-column {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    
    .bars-container {
      flex: 1;
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: flex-end;
      gap: 8px;
      z-index: 1;
    }
    
    .bar {
      width: 40%;
      min-height: 2px;
      transition: height 0.3s ease;
      border-top-left-radius: 3px;
      border-top-right-radius: 3px;
      z-index: 2;
      
      &.ayer {
        background-color: #1f3b5d;
      }
      
      &.anteayer {
        background-color: #4BA9E9;
      }
    }
    

  }
  
  .chart-legend {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-top: 1rem;
    
    .legend-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 0.8rem;
      color: #666;
      
      .legend-color {
        width: 14px;
        height: 14px;
        border-radius: 2px;
        
        &.ayer {
          background-color: #1f3b5d;
        }
        
        &.anteayer {
          background-color: #4BA9E9;
        }
      }
    }
  }
}
</style>