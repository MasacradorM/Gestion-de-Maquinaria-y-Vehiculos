---
import Head from "@components/_head.astro";
import Footer from "@components/dashboard/_footer.astro";
import Topbar from "@components/dashboard/_topbar.astro";
import Sidenav from "@components/dashboard/_sidenav.astro";
import Scripts from "@components/_scripts.astro";

const title = "Vehiculos | Dashboard";
const path = "../../../dist";
const mainPage = "vehiculos";
const page = "listado";

// Datos de ejemplo para las máquinas (simulando datos reales)
const maquinas = [
  
  {
    tipo: "CAMIÓN",
    codigo: "J3500-2",
    modelo: "L3500",
    estado: "EN MANTENIMIENTO",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    conductor: "Rafael Tucci"
  },
  {
    tipo: "CAMIÓN",
    codigo: "DAJ453",
    modelo: "L453",
    estado: "EN OPERACION",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    conductor: "Rafael Tucci"
  },
  {
    tipo: "CAMIÓN",
    codigo: "DAJ453",
    modelo: "L453",
    estado: "DISPONIBLE",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    conductor: "Rafael Tucci"
  },
  {
    tipo: "CAMIÓN",
    codigo: "DAJ453",
    modelo: "L453",
    estado: "DISPONIBLE",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    conductor: "Rafael Tucci"
  },
  {
    tipo: "CAMIÓN",
    codigo: "DAJ453",
    modelo: "L453",
    estado: "EN MANTENIMIENTO",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    conductor: "Rafael Tucci"
  },
  {
    tipo: "CAMIÓN",
    codigo: "DAJ453", 
    modelo: "L453",
    estado: "EN OPERACION",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    conductor: "Rafael Tucci"
  }
];

// Función para obtener la clase CSS del estado
const getEstadoClass = (estado: string) => {
  switch (estado) {
    case "DISPONIBLE":
      return "bg-success text-white";
    case "EN MANTENIMIENTO":
      return "bg-warning text-dark";
    case "EN OPERACION":
      return "bg-info text-white";
    default:
      return "bg-secondary";
  }
};
interface Maquina {
  tipo: string;
  codigo: string;
  modelo: string;
  estado: string;
  fecha: string;
  obra: string;
  actividad: string;
  conductor: string;
}

const actividadesDisponibles = [
  "Transporte de Vibro",
  "Excavación",
  "Carga de Materiales",
  "Nivelación de Terreno",
  "Otra actividad..."
];

---

<!DOCTYPE html>
<html lang="es">
  <!--begin::Head-->
  <head>
    <Head title={title} path={path} />
    
  </head>
  <!--end::Head-->
  <!--begin::Body-->
  <body class="layout-fixed sidebar-expand-lg bg-body-tertiary">


  
  <!-- Modal -->
<div class="modal fade" id="equipoModal" tabindex="-1" aria-labelledby="equipoModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="equipoModalLabel">Detalles del Equipo</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!-- Primera sección: Datos del equipo -->
        <div class="row mb-3">
          <div class="col-md-4">
            <label for="modal-tipo" class="form-label">Tipo</label>
            <input type="text" class="form-control" id="modal-tipo" readonly>
          </div>
          <div class="col-md-4">
            <label for="modal-modelo" class="form-label">Modelo</label>
            <input type="text" class="form-control" id="modal-modelo" readonly>
          </div>
          <div class="col-md-4">
            <label for="modal-placa" class="form-label">Placa/Código</label>
            <input type="text" class="form-control" id="modal-placa" readonly>
          </div>
        </div>

        <!-- Segunda sección: Estado del equipo -->
        <div class="row mb-3">
          <div class="col-12">
            <label class="form-label">Estado del Equipo</label>
            <div class="d-flex flex-wrap gap-4">
              <div class="form-check">
                <input class="form-check-input" type="radio" name="estado" id="mantenimiento" value="EN MANTENIMIENTO">
                <label class="form-check-label" for="mantenimiento">En Mantenimiento</label>
              </div>
              
              <div class="form-check">
                <input class="form-check-input" type="radio" name="estado" id="disponible" value="DISPONIBLE">
                <label class="form-check-label" for="disponible">Disponible</label>
              </div>

              <div class="form-check">
                <input class="form-check-input" type="radio" name="estado" id="operacion" value="EN OPERACION">
                <label class="form-check-label" for="operacion">En Operación</label>
              </div>
            
              <div class="form-check">
                <input class="form-check-input" type="radio" name="estado" id="standBy" value="STAND BY">
                <label class="form-check-label" for="standBy">Stand By</label>
              </div>
            </div>
          </div>
        </div>

        <hr>
        
        <!-- Tercera sección: Detalles de operación (siempre visible) -->
        <h4>Detalles de Operación</h4>
        <div class="row mb-3">
          <div class="col-md-6">
            <label for="modal-fecha" class="form-label">Fecha</label>
            <input type="date" class="form-control" id="modal-fecha">
          </div>
          <div class="col-md-6">
            <label for="modal-obra" class="form-label">Obra</label>
            <input type="text" class="form-control" id="modal-obra">
          </div>
        </div>
        
        <div class="row mb-3">
          <div class="col-md-6">
            <label for="modal-hr-inicial" class="form-label">Horómetro Inicial</label>
            <input type="number" class="form-control" id="modal-hr-inicial">
          </div>
          <div class="col-md-6">
            <label for="modal-hr-final" class="form-label">Horómetro Final</label>
            <input type="number" class="form-control" id="modal-hr-final">
          </div>
        </div>
        
        <div class="row mb-3">
          <div class="col-md-4">
            <label for="modal-horometro" class="form-label">Horómetro Total</label>
            <input type="number" class="form-control" id="modal-horometro" readonly>
          </div>
          <div class="col-md-4">
            <label for="modal-valor-hr" class="form-label">Valor por hora</label>
            <input type="number" class="form-control" id="modal-valor-hr">
          </div>
          <div class="col-md-4">
            <label for="modal-total" class="form-label">Total</label>
            <input type="number" class="form-control" id="modal-total" readonly>
          </div>
        </div>
        
        <div class="row mb-3">
          <div class="col-md-6">
            <label for="modal-conductor" class="form-label">Conductor</label>
            <input type="text" class="form-control" id="modal-conductor">
          </div>
        </div>

        <div class="row mb-3">
          <div class="col-md-6">
            <label for="modal-reporte" class="form-label">Reporte</label>
            <input type="text" class="form-control" id="modal-reporte">
          </div>
        </div> 

        <!-- Sección de actividades (solo visible en operación) -->
        <div id="actividad-cell" class="mb-4" style="display: none;">
          <h4>Actividades</h4>
          <div class="d-flex gap-2 mb-2">
            <select id="actividad-select" class="form-select">
              <option value="" disabled selected>Seleccionar actividad</option>
              <option value="Transporte de Vibro">Transporte de Vibro</option>
              <option value="Excavación">Excavación</option>
              <option value="Carga de Materiales">Carga de Materiales</option>
              <option value="Nivelación de Terreno">Nivelación de Terreno</option>
              <option value="Otra actividad...">Otra actividad...</option>
            </select>
            <button id="btn-agregar-actividad" type="button" class="btn btn-primary">
              Agregar
            </button>
          </div>

          <div id="nueva-actividad-container" class="mt-3 p-3 border rounded" style="display: none;">
            <label class="form-label">Nueva Actividad</label>
            <div class="d-flex gap-2">
              <input id="nueva-actividad-input" type="text" class="form-control" placeholder="Ingrese nueva actividad">
              <button id="btn-guardar-actividad" type="button" class="btn btn-success">
                Guardar
              </button>
            </div>
          </div>

          <div class="mt-3">
            <h5>Actividades agregadas:</h5>
            <div id="actividades-agregadas" class="mt-2">
              <p id="mensaje-actividades-vacio" class="text-muted fst-italic">No hay actividades agregadas.</p>
            </div>
          </div>
        </div>

        <!-- Sección de combustible -->
        <div class="mb-4">
          <h4>Combustible</h4>
          <div class="row">
            <div class="col-md-4">
              <label for="combustible-galones" class="form-label">Galones</label>
              <input type="number" id="combustible-galones" class="form-control" step="0.01">
            </div>
            <div class="col-md-4">
              <label for="combustible-horometro" class="form-label">Horómetro</label>
              <input type="number" id="combustible-horometro" class="form-control">
            </div>
            <div class="col-md-4">
              <label for="combustible-rendimiento" class="form-label">Rendimiento (gal/hr)</label>
              <input type="text" id="combustible-rendimiento" class="form-control" readonly>
            </div>
          </div>
        </div>
      
        <!-- Sección de observaciones -->
        <div class="mb-4">
          <h4>Observaciones</h4>
          <textarea id="modal-observaciones" class="form-control" rows="3" placeholder="Ingrese observaciones adicionales sobre el equipo o la operación"></textarea>
        </div>
      </div>
      
      <!-- Footer con botones de eliminar, cancelar y guardar -->
      <div class="modal-footer justify-content-between">
        <button type="button" class="btn btn-danger" id="btn-eliminar">
          <i class="bi bi-trash"></i> Eliminar
        </button>

        <div class="d-flex gap-2">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btn-cancelar">
            <i class="bi bi-x-circle"></i> Cancelar
          </button>
          <button type="button" class="btn btn-primary" id="btn-guardar-cambios">
            <i class="bi bi-save"></i> Guardar Cambios
          </button>
        </div>
      </div>
    </div>
  </div>
</div>



   <!--begin::App Wrapper-->
    <div class="app-wrapper">
      <Topbar path={path} />
      <Sidenav path={path} mainPage={mainPage} page={page} />
      <!--begin::App Main-->
      <main class="app-main">
        <!--begin::App Content Header-->
        <div class="app-content-header">
          <!--begin::Container-->
          <div class="container-fluid">
            <!--begin::Row-->
            <div class="row">
              <div class="col-sm-6">
                <h3 class="mb-0">Vehiculos</h3>
              </div>
              <div class="col-sm-6">
                <ol class="breadcrumb float-sm-end">
                  <li class="breadcrumb-item"><a href="#">Home</a></li>
                  <li class="breadcrumb-item active" aria-current="page">
                    Vehiculos
                  </li>
                </ol>
              </div>
            </div>
            <!--end::Row-->
          </div>
          <!--end::Container-->
        </div>
        <!--end::App Content Header-->
        <!--begin::App Content-->
        <div class="app-content">
          <!--begin::Container-->
          <div class="container-fluid">
            <!-- Filtros y botón Nueva Maquina -->
            <div class="filtros">
              <div class="search-box">
      


      <div class="input-group">
  
  <input
    type="search"
    class="form-control"
    placeholder="Buscar..."
    aria-label="Buscar"
  />
<span class="input-group-text">
  <img src="https://abs-0.twimg.com/emoji/v2/svg/1f50d.svg" alt="buscar" style="width:1em; height:1em;" />
</span>
</div>

              </div>
              
              <div class="filtros-dropdown d-flex gap-2">
                <div class="dropdown">
                  <button
                    class="btn btn-light dropdown-toggle"
                    type="button"
                    data-bs-toggle="dropdown"
                    aria-expanded="false"
                  >
                    Estado : Todos
                  </button>
                </div>
                
                <div class="dropdown">
                  <button
                    class="btn btn-light dropdown-toggle"
                    type="button"
                    data-bs-toggle="dropdown"
                    aria-expanded="false"
                  >
                    Conductor : Todos
                  </button>
                </div>
              </div>


              
              <div class="nueva-maquina">
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalNuevoVehiculo">
                  <i class="fas fa-plus"></i>   + Nuevo Vehículo
                </button>
              </div>
            </div>




<!-- Modal -->
<div class="modal fade" id="modalNuevoVehiculo" tabindex="-1" aria-labelledby="modalNuevoVehiculoLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <!-- Encabezado -->
      <div class="modal-header">
        <h5 class="modal-title" id="modalNuevoVehiculoLabel">Registrar Nuevo Vehículo</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      
      <!-- Cuerpo del formulario -->
      <div class="modal-body">
        <form id="formVehiculo">
          <!-- Tipo de Vehículo -->
          <div class="mb-3">
            <label for="tipoVehiculo" class="form-label">Tipo de Vehículo</label>
            <select class="form-select" id="tipoVehiculo" required>
              <option value="" disabled selected>Selecciona una opción</option>
              <option value="Volqueta Sencilla">Volqueta Sencilla</option>
              <option value="Volqueta Doble Troque">Volqueta Doble Troque</option>
              <option value="Turbo">Turbo</option>
              <option value="Camión">Camión</option>
              <option value="Camioneta">Camioneta</option>
              <option value="Otro">Otro</option>
            </select>
          </div>

          <!-- Campo para tipo de vehículo si se selecciona "Otro" -->
          <div class="mb-3 d-none" id="campoOtroTipo">
            <label for="otroTipo" class="form-label">Especifica el tipo de vehículo</label>
            <input type="text" class="form-control" id="otroTipo" placeholder="Ej: Motoniveladora">
          </div>

          <!-- Placa -->
          <div class="mb-3">
            <label for="placa" class="form-label">Placa</label>
            <input type="text" class="form-control" id="placa" placeholder="Ej: ABC123" required>
          </div>

          <!-- Conductor -->
          <div class="mb-3">
            <label for="conductor" class="form-label">Conductor Asignado</label>
            <input type="text" class="form-control" id="conductor" placeholder="Nombre del conductor" required>
          </div>
        </form>
      </div>

      <!-- Pie de modal -->
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="submit" class="btn btn-primary" form="formVehiculo">Guardar Vehículo</button>
      </div>
    </div>
  </div>
</div>

<!-- Contenedor donde se agregarán las tarjetas -->
<div class="row" id="vehiculosContainer">
  <!-- Las tarjetas se agregarán aquí -->
</div>

<!-- Script para mostrar campo de texto si selecciona "Otro" y para agregar la tarjeta -->
<script>
  // Variables para manejar el formulario y las tarjetas
  const vehiculos = [];
  
  // Mostrar campo "Otro" si selecciona "Otro"
  document.getElementById('tipoVehiculo').addEventListener('change', function () {
    const campoOtro = document.getElementById('campoOtroTipo');
    if (this.value === 'Otro') {
      campoOtro.classList.remove('d-none');
      document.getElementById('otroTipo').setAttribute('required', 'required');
    } else {
      campoOtro.classList.add('d-none');
      document.getElementById('otroTipo').removeAttribute('required');
    }
  });
  


function agregarVehiculo(vehiculo) {
  vehiculos.push(vehiculo);

  const tarjetaHTML = `
    <div class="col-md-4 mb-4">
      <div class="maquina-card">
        <div class="maquina-header bg-primary">
          <h5 class="maquina-titulo">${vehiculo.tipo} ${vehiculo.placa}</h5>
          <span class="estado-badge ${getEstadoClass(vehiculo.estado)}">
            ${vehiculo.estado}
          </span>
        </div>
        <div class="maquina-content">
          <div class="maquina-info">
            <span class="maquina-label">Fecha:</span>
            <span class="maquina-value">${vehiculo.fecha}</span>
          </div>
          <hr class="maquina-divider" />
          <div class="maquina-info">
            <span class="maquina-label">Conductor:</span>
            <span class="maquina-value">${vehiculo.conductor}</span>
          </div>
          <div class="botonera">
            <button class="btn btn-sm btn-outline-secondary">
              + Nuevo Registro
            </button>
            <button class="btn btn-sm btn-info text-white">
              Editar
            </button>
          </div>
        </div>
      </div>
    </div>
  `;

  document.getElementById('vehiculosContainer').innerHTML += tarjetaHTML;
}


</script>








      
            
            <!--begin::Row-->
            <div class="row">
              {
                maquinas.map((maquina) => (
                  <div class="col-md-4">
                    <div class="maquina-card">
                      <div class="maquina-header">
                        <h5 class="maquina-titulo">
                          {maquina.tipo} {maquina.codigo}
                        </h5>
                        <span 
                          class={`estado-badge ${getEstadoClass(maquina.estado)}`}
                        >
                          {maquina.estado}
                        </span>
                      </div>
                      <div class="maquina-content">
                        <div class="maquina-info">
                          <span class="maquina-label">Fecha:</span>
                          <span class="maquina-value">{maquina.fecha}</span>
                        </div>
                        <hr class="maquina-divider" />
                        <div class="maquina-info">
                          <span class="maquina-label">Obra:</span>
                          <span class="maquina-value">{maquina.obra}</span>
                        </div>
                        <hr class="maquina-divider" />
                        <div class="maquina-info">
                          <span class="maquina-label">Actividad:</span>
                          <span class="maquina-value">{maquina.actividad}</span>
                        </div>
                        <hr class="maquina-divider" />
                        <div class="maquina-info">
                          <span class="maquina-label">Conductor:</span>
                          <span class="maquina-value">{maquina.conductor}</span>
                        </div>
                        <div class="botonera">
                          <button class="btn btn-sm btn-outline-secondary">
                            + Nuevo Registro
                          </button>
<button 
  class="btn btn-sm btn-info text-white" 
  data-bs-toggle="modal" 
  data-bs-target="#equipoModal"
  data-tipo={maquina.tipo}
  data-codigo={maquina.codigo}
  data-modelo={maquina.modelo}
  data-estado={maquina.estado}
  data-fecha={maquina.fecha}
  data-obra={maquina.obra}
  data-actividad={maquina.actividad}
  data-conductor={maquina.conductor}
>
  Editar
</button>
         
                        </div>
                      </div>
                    </div>
                  </div>
                ))
              }
            </div>
            <!--end::Row-->
            
            <!-- Paginación -->
            <nav aria-label="Paginación de maquinaria">
              <ul class="pagination justify-content-center">
                <li class="page-item">
                  <a class="page-link" href="#" aria-label="Anterior">
                    <span aria-hidden="true">&laquo;</span>
                  </a>
                </li>
                <li class="page-item active">
                  <a class="page-link" href="#">1</a>
                </li>
                <li class="page-item">
                  <a class="page-link" href="#">2</a>
                </li>
                <li class="page-item">
                  <a class="page-link" href="#">3</a>
                </li>
                <li class="page-item">
                  <a class="page-link" href="#">4</a>
                </li>
                <li class="page-item">
                  <a class="page-link" href="#">5</a>
                </li>
                <li class="page-item">
                  <a class="page-link" href="#" aria-label="Siguiente">
                    <span aria-hidden="true">&raquo;</span>
                  </a>
                </li>
              </ul>
            </nav>
          </div>
          <!--end::Container-->
        </div>
        <!--end::App Content-->
      </main>
      <!--end::App Main-->
      <Footer />
    </div>
    <!--end::App Wrapper-->
    <!--begin::Script-->
    <Scripts path={path} />
    <!--end::Script-->
  </body><!--end::Body-->
  


<style>
  /* ESTILOS PARA TARJETAS DE VEHÍCULOS - VERSIÓN DEFINITIVA */
  
  /* Contenedor principal */
  #vehiculosContainer {
    margin: 20px 0;
  }
  
  /* Tarjeta base */
  .maquina-card {
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
    background: white;
    border: 1px solid #e0e0e0;
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    height: 100%;
  }
  
  .maquina-card:hover {
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    transform: translateY(-2px);
  }
  
  /* Encabezado de la tarjeta */
  .maquina-card .maquina-header {
    padding: 12px 16px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: #2c3e50;
    color: white;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .maquina-card .maquina-header.bg-primary {
    background: #2c3e50 !important;
  }
  
  .maquina-card .maquina-titulo {
    font-weight: 600;
    margin: 0;
    font-size: 1.05rem;
    color: white;
  }
  
  /* Badge de estado */
  .maquina-card .estado-badge {
    border-radius: 12px;
    padding: 4px 10px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .maquina-card .bg-success {
    background-color: #28a745 !important;
  }
  
  .maquina-card .bg-danger {
    background-color: #dc3545 !important;
  }
  
  .maquina-card .bg-secondary {
    background-color: #6c757d !important;
  }
  
  /* Cuerpo de la tarjeta */
  .maquina-card .maquina-content {
    padding: 16px;
  }
  
  /* Información de la máquina */
  .maquina-card .maquina-info {
    display: flex;
    margin-bottom: 10px;
  }
  
  .maquina-card .maquina-label {
    font-weight: 600;
    color: #6c757d;
    min-width: 90px;
    font-size: 0.85rem;
  }
  
  .maquina-card .maquina-value {
    color: #495057;
    font-weight: 500;
    font-size: 0.9rem;
  }
  
  /* Divisor */
  .maquina-card .maquina-divider {
    margin: 12px 0;
    border: 0;
    height: 1px;
    background: #e9ecef;
  }
  
  /* Botones */
  .maquina-card .botonera {
    margin-top: 16px;
    display: flex;
    justify-content: flex-end;
    gap: 8px;
  }
  
  .maquina-card .botonera .btn {
    font-size: 0.8rem;
    padding: 5px 10px;
    border-radius: 4px;
  }
  
  /* Asegurar que las columnas tengan el mismo alto */
  #vehiculosContainer .col-md-4 {
    display: flex;
  }
</style>


<script>


  document.getElementById('tipoVehiculo').addEventListener('change', function () {
    const campoOtro = document.getElementById('campoOtroTipo');
    if (this.value === 'Otro') {
      campoOtro.classList.remove('d-none');
      document.getElementById('otroTipo').setAttribute('required', 'required');
    } else {
      campoOtro.classList.add('d-none');
      document.getElementById('otroTipo').removeAttribute('required');
    }
  });
// Espera a que el DOM esté cargado
document.addEventListener("DOMContentLoaded", () => {
  const estadoRadios = document.querySelectorAll<HTMLInputElement>('input[name="estado"]');
  const actividadCell = document.getElementById("actividad-cell")!;
  const hrInicial = document.getElementById("modal-hr-inicial") as HTMLInputElement;
  const hrFinal = document.getElementById("modal-hr-final") as HTMLInputElement;
  const hrTotal = document.getElementById("modal-horometro") as HTMLInputElement;
  const valorHr = document.getElementById("modal-valor-hr") as HTMLInputElement;
  const total = document.getElementById("modal-total") as HTMLInputElement;
  const galones = document.getElementById("combustible-galones") as HTMLInputElement;
  const hrCombustible = document.getElementById("combustible-horometro") as HTMLInputElement;
  const rendimiento = document.getElementById("combustible-rendimiento") as HTMLInputElement;

  // Mostrar u ocultar actividades según el estado
  estadoRadios.forEach((radio) => {
    radio.addEventListener("change", () => {
      actividadCell.style.display = (radio.id === "operacion" && radio.checked) ? "block" : "none";
    });
  });

  // Función para calcular horómetro total
  function calcularHorometroYTotal() {
    const inicial = parseFloat(hrInicial.value);
    const final = parseFloat(hrFinal.value);
    const valor = parseFloat(valorHr.value);

    if (!isNaN(inicial) && !isNaN(final) && final >= inicial) {
      const totalHoras = final - inicial;
      hrTotal.value = totalHoras.toFixed(2);

      if (!isNaN(valor)) {
        total.value = (totalHoras * valor).toFixed(2);
      }
    } else {
      hrTotal.value = "";
      total.value = "";
    }
  }

  // Función para calcular rendimiento
  function calcularRendimiento() {
    const gal = parseFloat(galones.value);
    const horas = parseFloat(hrCombustible.value);

    if (!isNaN(gal) && !isNaN(horas) && horas > 0) {
      rendimiento.value = (gal / horas).toFixed(2);
    } else {
      rendimiento.value = "";
    }
  }

  // Eventos para cálculo de horómetro y total
  hrInicial.addEventListener("input", calcularHorometroYTotal);
  hrFinal.addEventListener("input", calcularHorometroYTotal);
  valorHr.addEventListener("input", calcularHorometroYTotal);

  // Eventos para cálculo de rendimiento
  galones.addEventListener("input", calcularRendimiento);
  hrCombustible.addEventListener("input", calcularRendimiento);
});

</script>
</html>