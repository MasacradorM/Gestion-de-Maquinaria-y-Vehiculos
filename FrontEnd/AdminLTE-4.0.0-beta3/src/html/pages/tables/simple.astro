---
import Head from "@components/_head.astro";
import Footer from "@components/dashboard/_footer.astro";
import Topbar from "@components/dashboard/_topbar.astro";
import Sidenav from "@components/dashboard/_sidenav.astro";
import Scripts from "@components/_scripts.astro";

const title = "Maquinaria Amarilla | Dashboard";
const path = "../../../dist";
const mainPage = "maquinaria";
const page = "listado";

// Datos de ejemplo para las máquinas (simulando datos reales)
const maquinas = [
  
  {
    tipo: "AUTOHOMIGONERA",
    placa: "L3500",
    estado: "EN MANTENIMIENTO",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    operador: "Rafael Tucci"
  },
  {
    tipo: "EXCAVADORA",
    placa: "L453",
    estado: "EN OPERACIÓN",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    operaador: "Rafael Tucci"
  },
  {
    tipo: "EXCAVADORA",
    placa: "L453",
    estado: "DISPONIBLE",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    operador: "Rafael Tucci"
  },
  {
    tipo: "EXCAVADORA",
    placa: "L453",
    estado: "DISPONIBLE",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    operador: "Rafael Tucci"
  },
  {
    tipo: "EXCAVADORA",
    placa: "L453",
    estado: "EN MANTENIMIENTO",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    operador: "Rafael Tucci"
  },
  {
    tipo: "EXCAVADORA", 
    placa: "L453",
    estado: "EN OPERACION",
    fecha: "12/04/2025",
    obra: "Ingeniero villani",
    actividad: "Transporte de Vibro",
    operador: "Rafael Tucci"
  }
];

// Función para obtener la clase CSS del estado
const getEstadoClass = (estado: string) => {
  // Primero normalizamos el estado (minúsculas, sin espacios extras)
  const estadoNormalizado = estado.trim().toLowerCase();
  
  // Mapeo de estados a clases CSS
  const estados = {
    'disponible': 'disponible',
    'en mantenimiento': 'mantenimiento multilinea',
    'mantenimiento': 'mantenimiento multilinea', // Por si acaso
    'en operacion': 'operacion multilinea',
    'operacion': 'operacion multilinea',
    'en operación': 'operacion multilinea', // Con tilde
    'default': 'transito'
  };

  return estados[estadoNormalizado] || estados['default'];
};

interface Maquina {
  tipo: string;
  placa: string;
  estado: string;
  fecha: string;
  obra: string;
  actividad: string;
  operador: string;
}

const actividadesDisponibles = [
  "Transporte de Vibro",
  "Excavación",
  "Carga de Materiales",
  "Nivelación de Terreno",
  "Otra actividad..."
];

---

<!DOCTYPE html>
<html lang="es">
  <!--begin::Head-->
  <head>
    <Head title={title} path={path} />
    <style>

  // Variables
$primary-color: #3498DB;
$secondary-color: #2c3e50;
$light-color: #f8f9fa;

/* ESTILOS PARA ESTADOS */


/* Estilos base para todos los badges */
.estado-badge {
  border-radius: 20px;
  padding: 6px 10px;
  font-size: 12px;
  font-weight: bold;
  display: inline-block;
  text-align: center;
  text-transform: uppercase;
  min-width: 80px;
}

/* Badges multilínea */
.estado-badge.multilinea {
  display: inline-flex;
  flex-direction: column;
  justify-content: center;
  min-height: 40px;
  line-height: 0.9;
  padding: 6px 10px;
  
}

.estado-badge.multilinea span {
  display: block;
  width:120px;
}

/* Colores específicos para cada estado */
.estado-badge.disponible {
  min-width: 120px;
  padding: 6px 10px;
  background-color: rgba(93, 209, 93, 0.15);
  color: rgba(93, 209, 93, 1);
  border: 1px solid rgba(93, 209, 93, 1);
  border-radius: 20px;
  font-weight: bold;
}

.estado-badge.mantenimiento {
  background-color: rgba(255, 165, 0, 0.15);
  color: rgba(255, 165, 0, 1);
  border: 1px solid rgba(255, 165, 0, 1);
  border-radius: 20px;
  font-weight: bold;
}

.estado-badge.operacion {
  background-color:rgba(52, 152, 219, 0.15);
  color:rgba(52, 152, 219, 1);
  border: 1px solid rgba(52, 152, 219, 1);
  border-radius: 20px;
  font-weight: bold;
}

.estado-badge.transito {
  background-color: #6c757d;
  color: white;
}



      .maquina-card {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        background-color: #ffffff;
      }
      
      .maquina-header {
        padding: 10px 15px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        color: #ffffff;
        background-color: #1A365D;
      }
      
      .maquina-titulo {
        font-weight: bold;
        margin: 0;
      }
      
      
      .maquina-content {
        padding: 15px;
      }
      
      .maquina-info {
        margin-bottom: 10px;
      }
      
      .maquina-label {
        font-weight: bold;
        margin-right: 5px;
      }
      
      .maquina-value {
        color: #007bff;
      }
      
      .botonera {
        margin-top: 10px;
        display: flex;
        justify-content: flex-end;
        gap: 5px;
      }
      
      .filtros {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
        align-items: center;
      }
      
      .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
      }
      
      .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
      }



// Estilos para el modal
.modal {
  &-content {
    border-radius: 0.5rem;
  }

  &-header {
    background: $secondary-color;
    color: white;
    border-bottom: none;
  }
}

// Estilos para la sección de actividad
#actividad-cell {
  .input-group {
    width: 100%;
  }

  #nueva-actividad-container {
    transition: all 0.3s ease;
  }
}
// Variables
$color-disponible: #28a745;
$color-mantenimiento: red;
$color-operacion: #3498DB;
$color-transito: #6c757d;


$card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
$border-radius: 8px;

// Estilos para la sección de Maquinaria Amarilla
.maquinaria-container {
  padding: 20px 0;
  
  // Encabezado y filtros
  .filtros-section {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
    align-items: center;
    flex-wrap: wrap;
    gap: 10px;
    
    @media (max-width: 768px) {
      flex-direction: column;
      align-items: stretch;
    }
    
    .search-box {
      width: 250px;
      
      @media (max-width: 768px) {
        width: 100%;
      }
    }
    
    .filtros-dropdown {
      display: flex;
      gap: 10px;
      
      @media (max-width: 768px) {
        flex-direction: column;
      }
    }
  }
  
  // Tarjetas de maquinaria
  .maquina-card {
    border-radius: $border-radius;
    overflow: hidden;
    box-shadow: $card-shadow;
    margin-bottom: 20px;
    background-color: #ffffff;
    transition: transform 0.2s ease-in-out;
    
    &:hover {
      transform: translateY(-5px);
    }
    
    .maquina-header {
      padding: 10px 15px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      color: #ffffff;
      background-color: $secondary-color;
      
      .maquina-titulo {
        font-weight: bold;
        margin: 0;
        text-transform: uppercase;
      }
    }
    
    
    .maquina-content {
      padding: 15px;
      
      .maquina-info {
        margin-bottom: 8px;
        display: flex;
        padding: 2px 0;
        
        .maquina-label {
          font-weight: bold;
          min-width: 80px;
          color: #6c757d;
        }
        
        .maquina-value {
          color: $primary-color;
          text-transform: capitalize;
        }
      }
      
      .maquina-divider {
        margin: 0 0 8px 0;
        opacity: 0.2;
        border-top: 1px solid #ccc;
      }
      
      .botonera {
        margin-top: 10px;
        display: flex;
        justify-content: flex-end;
        gap: 5px;
      }
    }
  }
  
  // Paginación
  .pagination-container {
    margin-top: 30px;
    
    .pagination {
      display: flex;
      justify-content: center;
      
      .page-item {
        &.active .page-link {
          background-color: $primary-color;
          border-color: $primary-color;
        }
        
        .page-link {
          color: $secondary-color;
          
          &:focus {
            box-shadow: 0 0 0 0.25rem rgba($primary-color, 0.25);
          }
        }
      }
    }
  }
}

// Botón de Nueva Máquina
.btn-nueva-maquina {
  font-weight: 600;
  background-color: #3498DB;
  padding: 8px 16px;
  display: flex;
  align-items: center;
  gap: 5px;
  
  i {
    font-size: 12px;
  }
}
</style>
  </head>
  <!--end::Head-->
  <!--begin::Body-->
  <body class="layout-fixed sidebar-expand-lg bg-body-tertiary">


  
  <!-- Modal -->
<div class="modal fade" id="equipoModal" tabindex="-1" aria-labelledby="equipoModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="equipoModalLabel">Detalles del Equipo</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!-- Primera sección: Datos del equipo -->
        <div class="row mb-3">
          <div class="col-md-4">
            <label for="modal-tipo" class="form-label">Tipo</label>
            <input type="text" class="form-control" id="modal-tipo" readonly>
          </div>
          <div class="col-md-4">
            <label for="modal-placa" class="form-label">Placa</label>
            <input type="text" class="form-control" id="modal-placa" readonly>
          </div>
        </div>

        <!-- Segunda sección: Estado del equipo -->
        <div class="row mb-3">
          <div class="col-12">
            <label class="form-label">Estado del Equipo</label>
            <div class="d-flex flex-wrap gap-4">
              <div class="form-check">
                <input class="form-check-input" type="radio" name="estado" id="mantenimiento" value="EN MANTENIMIENTO">
                <label class="form-check-label" for="mantenimiento">En Mantenimiento</label>
              </div>
              
              <div class="form-check">
                <input class="form-check-input" type="radio" name="estado" id="disponible" value="DISPONIBLE">
                <label class="form-check-label" for="disponible">Disponible</label>
              </div>

              <div class="form-check">
                <input class="form-check-input" type="radio" name="estado" id="operacion" value="EN OPERACION">
                <label class="form-check-label" for="operacion">En Operación</label>
              </div>
            
              <div class="form-check">
                <input class="form-check-input" type="radio" name="estado" id="standBy" value="STAND BY">
                <label class="form-check-label" for="standBy">Stand By</label>
              </div>
            </div>
          </div>
        </div>

        <hr>
        
        <!-- Tercera sección: Detalles de operación (siempre visible) -->
        <h4>Detalles de Operación</h4>
        <div class="row mb-3">
          <div class="col-md-6">
            <label for="modal-fecha" class="form-label">Fecha</label>
            <input type="date" class="form-control" id="modal-fecha">
          </div>
          <div class="col-md-6">
            <label for="modal-obra" class="form-label">Obra</label>
            <input type="text" class="form-control" id="modal-obra">
          </div>
        </div>
        
        <div class="row mb-3">
          <div class="col-md-6">
            <label for="modal-hr-inicial" class="form-label">Horómetro Inicial</label>
            <input type="number" class="form-control" id="modal-hr-inicial">
          </div>
          <div class="col-md-6">
            <label for="modal-hr-final" class="form-label">Horómetro Final</label>
            <input type="number" class="form-control" id="modal-hr-final">
          </div>
        </div>
        
        <div class="row mb-3">
          <div class="col-md-4">
            <label for="modal-horometro" class="form-label">Horómetro Total</label>
            <input type="number" class="form-control" id="modal-horometro" readonly>
          </div>
          <div class="col-md-4">
            <label for="modal-valor-hr" class="form-label">Valor por hora</label>
            <input type="number" class="form-control" id="modal-valor-hr">
          </div>
          <div class="col-md-4">
            <label for="modal-total" class="form-label">Total</label>
            <input type="number" class="form-control" id="modal-total" readonly>
          </div>
        </div>
        
        <div class="row mb-3">
          <div class="col-md-6">
            <label for="modal-operador" class="form-label">Operador</label>
            <input type="text" class="form-control" id="modal-operador">
          </div>
        </div>

        <div class="row mb-3">
          <div class="col-md-6">
            <label for="modal-reporte" class="form-label">Reporte</label>
            <input type="text" class="form-control" id="modal-reporte">
          </div>
        </div> 

        <!-- Sección de actividades (solo visible en operación) -->
        <div id="actividad-cell" class="mb-4" style="display: none;">
          <h4>Actividades</h4>
          <div class="d-flex gap-2 mb-2">
            <select id="actividad-select" class="form-select">
              <option value="" disabled selected>Seleccionar actividad</option>
              <option value="Transporte de Vibro">Transporte de Vibro</option>
              <option value="Excavación">Excavación</option>
              <option value="Carga de Materiales">Carga de Materiales</option>
              <option value="Nivelación de Terreno">Nivelación de Terreno</option>
              <option value="Otra actividad...">Otra actividad...</option>
            </select>
            <button id="btn-agregar-actividad" type="button" class="btn btn-primary">
              Agregar
            </button>
          </div>

          <div id="nueva-actividad-container" class="mt-3 p-3 border rounded" style="display: none;">
            <label class="form-label">Nueva Actividad</label>
            <div class="d-flex gap-2">
              <input id="nueva-actividad-input" type="text" class="form-control" placeholder="Ingrese nueva actividad">
              <button id="btn-guardar-actividad" type="button" class="btn btn-success">
                Guardar
              </button>
            </div>
          </div>

          <div class="mt-3">
            <h5>Actividades agregadas:</h5>
            <div id="actividades-agregadas" class="mt-2">
              <p id="mensaje-actividades-vacio" class="text-muted fst-italic">No hay actividades agregadas.</p>
            </div>
          </div>
        </div>

        <!-- Sección de combustible -->
        <div class="mb-4">
          <h4>Combustible</h4>
          <div class="row">
            <div class="col-md-4">
              <label for="combustible-galones" class="form-label">Galones</label>
              <input type="number" id="combustible-galones" class="form-control" step="0.01">
            </div>
            <div class="col-md-4">
              <label for="combustible-horometro" class="form-label">Horómetro</label>
              <input type="number" id="combustible-horometro" class="form-control">
            </div>
            <div class="col-md-4">
              <label for="combustible-rendimiento" class="form-label">Rendimiento (gal/hr)</label>
              <input type="text" id="combustible-rendimiento" class="form-control" readonly>
            </div>
          </div>
        </div>
      
        <!-- Sección de observaciones -->
        <div class="mb-4">
          <h4>Observaciones</h4>
          <textarea id="modal-observaciones" class="form-control" rows="3" placeholder="Ingrese observaciones adicionales sobre el equipo o la operación"></textarea>
        </div>
      </div>
      
      <!-- Footer con botones de eliminar, cancelar y guardar -->
      <div class="modal-footer justify-content-between">
        <button type="button" class="btn btn-danger" id="btn-eliminar">
          <i class="bi bi-trash"></i> Eliminar
        </button>

        <div class="d-flex gap-2">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btn-cancelar">
            <i class="bi bi-x-circle"></i> Cancelar
          </button>
          <button type="button" class="btn btn-primary" id="btn-guardar-cambios">
            <i class="bi bi-save"></i> Guardar Cambios
          </button>
        </div>
      </div>
    </div>
  </div>
</div>



   <!--begin::App Wrapper-->
    <div class="app-wrapper">
      <Topbar path={path} />
      <Sidenav path={path} mainPage={mainPage} page={page} />
      <!--begin::App Main-->
      <main class="app-main">
        <!--begin::App Content Header-->
        <div class="app-content-header">
          <!--begin::Container-->
          <div class="container-fluid">
            <!--begin::Row-->
            <div class="row">
              <div class="col-sm-6">
                <h3 class="mb-0">Maquinaria Amarilla</h3>
              </div>
              <div class="col-sm-6">
                <ol class="breadcrumb float-sm-end">
                  <li class="breadcrumb-item"><a href="#">Home</a></li>
                  <li class="breadcrumb-item active" aria-current="page">
                    Maquinaria Amarilla
                  </li>
                </ol>
              </div>
            </div>
            <!--end::Row-->
          </div>
          <!--end::Container-->
        </div>
        <!--end::App Content Header-->
        <!--begin::App Content-->
        <div class="app-content">
          <!--begin::Container-->
          <div class="container-fluid">
            <!-- Filtros y botón Nueva Maquina -->
            <div class="filtros">
              <div class="search-box">
      


      <div class="input-group">
  
  <input
    type="search"
    class="form-control"
    placeholder="Buscar..."
    aria-label="Buscar"
  />
<span class="input-group-text">
  <img src="https://abs-0.twimg.com/emoji/v2/svg/1f50d.svg" alt="buscar" style="width:1em; height:1em;" />
</span>
</div>

              </div>
              
              <div class="filtros-dropdown d-flex gap-2">
                <div class="dropdown">
                  <button
                    class="btn btn-light dropdown-toggle"
                    type="button"
                    data-bs-toggle="dropdown"
                    aria-expanded="false"
                  >
                    Estado : Todos
                  </button>
                </div>
                
                <div class="dropdown">
                  <button
                    class="btn btn-light dropdown-toggle"
                    type="button"
                    data-bs-toggle="dropdown"
                    aria-expanded="false"
                  >
                    Operador: Todos
                  </button>
                </div>
              </div>
              
              <div class="nueva-maquina">
                <button class="btn ">
                  <i class="fas fa-plus"></i> <strong>+ Nueva Maquina</strong>
                </button>
              </div>
            </div>
            
            <!--begin::Row-->
            <div class="row">
              {
                maquinas.map((maquina) => (
                  <div class="col-md-4">
                    <div class="maquina-card">
                      <div class="maquina-header">
                        <h5 class="maquina-titulo">
                          {maquina.tipo} {maquina.placa}
                        </h5>
       

       <span class={`estado-badge ${getEstadoClass(maquina.estado)}`}>
  {maquina.estado.split(' ').length > 2 ? (
    // Para estados con más de 2 palabras (ej: "EN MANTENIMIENTO PREVENTIVO")
    <>
      <span>{maquina.estado.split(' ')[0]}</span>
      <span>{maquina.estado.split(' ').slice(1).join(' ')}</span>
    </>
  ) : maquina.estado.split(' ').length > 1 ? (
    // Para estados con 2 palabras (ej: "EN OPERACION")
    <>
      <span>{maquina.estado.split(' ')[0]}</span>
      <span>{maquina.estado.split(' ')[1]}</span>
    </>
  ) : (
    // Para estados de una sola palabra (ej: "DISPONIBLE")
    maquina.estado
  )}
</span>
                      </div>
                      <div class="maquina-content">
                        <div class="maquina-info">
                          <span class="maquina-label">Fecha:</span>
                          <span class="maquina-value">{maquina.fecha}</span>
                        </div>
                        <hr class="maquina-divider" />
                        <div class="maquina-info">
                          <span class="maquina-label">Obra:</span>
                          <span class="maquina-value">{maquina.obra}</span>
                        </div>
                        <hr class="maquina-divider" />
                        <div class="maquina-info">
                          <span class="maquina-label">Actividad:</span>
                          <span class="maquina-value">{maquina.actividad}</span>
                        </div>
                        <hr class="maquina-divider" />
                        <div class="maquina-info">
                          <span class="maquina-label">Operador:</span>
                          <span class="maquina-value">{maquina.operador}</span>
                        </div>
                        <div class="botonera">
                          <button class="btn btn-sm btn-outline-secondary">
                            + Nuevo Registro
                          </button>
<button 
  class="btn btn-sm btn-info text-white" 
  data-bs-toggle="modal" 
  data-bs-target="#equipoModal"
  data-tipo={maquina.tipo}
  data-placa={maquina.placa}
  data-estado={maquina.estado}
  data-fecha={maquina.fecha}
  data-obra={maquina.obra}
  data-actividad={maquina.actividad}
  data-operador={maquina.operador}
>
  Editar
</button>
         
                        </div>
                      </div>
                    </div>
                  </div>
                ))
              }
            </div>
            <!--end::Row-->
            
            <!-- Paginación -->
            <nav aria-label="Paginación de maquinaria">
              <ul class="pagination justify-content-center">
                <li class="page-item">
                  <a class="page-link" href="#" aria-label="Anterior">
                    <span aria-hidden="true">&laquo;</span>
                  </a>
                </li>
                <li class="page-item active">
                  <a class="page-link" href="#">1</a>
                </li>
                <li class="page-item">
                  <a class="page-link" href="#">2</a>
                </li>
                <li class="page-item">
                  <a class="page-link" href="#">3</a>
                </li>
                <li class="page-item">
                  <a class="page-link" href="#">4</a>
                </li>
                <li class="page-item">
                  <a class="page-link" href="#">5</a>
                </li>
                <li class="page-item">
                  <a class="page-link" href="#" aria-label="Siguiente">
                    <span aria-hidden="true">&raquo;</span>
                  </a>
                </li>
              </ul>
            </nav>
          </div>
          <!--end::Container-->
        </div>
        <!--end::App Content-->
      </main>
      <!--end::App Main-->
      <Footer />
    </div>
    <!--end::App Wrapper-->
    <!--begin::Script-->
    <Scripts path={path} />
    <!--end::Script-->
  </body><!--end::Body-->
  

<script>

// Espera a que el DOM esté cargado
document.addEventListener("DOMContentLoaded", () => {
  const estadoRadios = document.querySelectorAll<HTMLInputElement>('input[name="estado"]');
  const actividadCell = document.getElementById("actividad-cell")!;
  const hrInicial = document.getElementById("modal-hr-inicial") as HTMLInputElement;
  const hrFinal = document.getElementById("modal-hr-final") as HTMLInputElement;
  const hrTotal = document.getElementById("modal-horometro") as HTMLInputElement;
  const valorHr = document.getElementById("modal-valor-hr") as HTMLInputElement;
  const total = document.getElementById("modal-total") as HTMLInputElement;
  const galones = document.getElementById("combustible-galones") as HTMLInputElement;
  const hrCombustible = document.getElementById("combustible-horometro") as HTMLInputElement;
  const rendimiento = document.getElementById("combustible-rendimiento") as HTMLInputElement;

  // Mostrar u ocultar actividades según el estado
  estadoRadios.forEach((radio) => {
    radio.addEventListener("change", () => {
      actividadCell.style.display = (radio.id === "operacion" && radio.checked) ? "block" : "none";
    });
  });

  // Función para calcular horómetro total
  function calcularHorometroYTotal() {
    const inicial = parseFloat(hrInicial.value);
    const final = parseFloat(hrFinal.value);
    const valor = parseFloat(valorHr.value);

    if (!isNaN(inicial) && !isNaN(final) && final >= inicial) {
      const totalHoras = final - inicial;
      hrTotal.value = totalHoras.toFixed(2);

      if (!isNaN(valor)) {
        total.value = (totalHoras * valor).toFixed(2);
      }
    } else {
      hrTotal.value = "";
      total.value = "";
    }
  }

  // Función para calcular rendimiento
  function calcularRendimiento() {
    const gal = parseFloat(galones.value);
    const horas = parseFloat(hrCombustible.value);

    if (!isNaN(gal) && !isNaN(horas) && horas > 0) {
      rendimiento.value = (gal / horas).toFixed(2);
    } else {
      rendimiento.value = "";
    }
  }

  // Eventos para cálculo de horómetro y total
  hrInicial.addEventListener("input", calcularHorometroYTotal);
  hrFinal.addEventListener("input", calcularHorometroYTotal);
  valorHr.addEventListener("input", calcularHorometroYTotal);

  // Eventos para cálculo de rendimiento
  galones.addEventListener("input", calcularRendimiento);
  hrCombustible.addEventListener("input", calcularRendimiento);
});


const equipoModal = document.getElementById("equipoModal");

equipoModal?.addEventListener("show.bs.modal", (event) => {
  const button = event.relatedTarget as HTMLElement;

  const tipo = button.getAttribute("data-tipo") || "";
  const placa = button.getAttribute("data-placa") || "";
  const estado = button.getAttribute("data-estado") || "";
  const fecha = button.getAttribute("data-fecha") || "";
  const obra = button.getAttribute("data-obra") || "";
  const actividad = button.getAttribute("data-actividad") || "";
  const operador= button.getAttribute("data-operador") || "";

  // Colocar los valores en los campos del modal
  (document.getElementById("modal-tipo") as HTMLInputElement).value = tipo;
  (document.getElementById("modal-placa") as HTMLInputElement).value = placa;
  (document.getElementById("modal-fecha") as HTMLInputElement).value = fecha;
  (document.getElementById("modal-obra") as HTMLInputElement).value = obra;
  (document.getElementById("modal-actividad") as HTMLInputElement).value = actividad;
  (document.getElementById("modal-operador") as HTMLInputElement).value = operador;

  // Estado (radio button)
  const radio = document.querySelector(`input[name="estado"][value="${estado}"]`) as HTMLInputElement;
  if (radio) {
    radio.checked = true;
    radio.dispatchEvent(new Event("change")); // Para mostrar u ocultar "actividad"
  }
});


</script>
</html>